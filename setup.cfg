[metadata]
name = aces
author = ACES team
author_email = 
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://github.com/ACES-CMZ/reduction_ACES
description = ACES data reduction stuff
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = ACES-CMZ/reduction_ACES

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    astropy
    astroquery
    scipy
    numpy
    matplotlib
    radio-beam
    spectral-cube
    regions
    reproject


[options.extras_require]
test =
    pytest-astropy
    astropy
    astroquery
    matplotlib
    scipy
    numpy
    ghapi
    radio-beam
    spectral-cube @ git+https://github.com/radio-astro-tools/spectral-cube.git@master
    regions
    reproject
    tqdm
docs =
    sphinx-astropy
all =
    astropy
    astroquery
    matplotlib
    scipy
    numpy
    ghapi
    radio-beam
    spectral-cube @ git+https://github.com/radio-astro-tools/spectral-cube.git@master
    regions
    reproject
    tqdm

[options.package_data]
aces = data/*
aces.pipeline_scripts = *.json

[options.entry_points]
console_scripts =
    aces_cube_stats_grid = aces.analysis.cube_stats_grid:main
    aces_imstats = aces.analysis.imstats:main
    aces_statcont = aces.analysis.statcont_cubes:main
    aces_toast = aces.visualization.toast_aces:main
    aces_mosaic_12m = aces.imaging.mosaic_12m:main
    aces_mosaic_7m = aces.imaging.mosaic_7m:main
    aces_mosaic_TP = aces.imaging.mosaic_TP:main
    aces_ghapi_update = aces.hipergator_scripts.ghapi_update:main
    aces_generate_spw33_commands = aces.pipeline_scripts.generate_spw33_commands:main
    aces_link_repipeline_weblogs = aces.hipergator_scripts.link_repipeline_weblogs:main
    aces_job_runner = aces.hipergator_scripts.job_runner:main
    aces_delivery_status = aces.hipergator_scripts.delivery_status:main
    aces_make_humanreadable_links = aces.retrieval_scripts.make_humanreadable_links:main
    aces_retrieve_data = aces.retrieval_scripts.retrieve_data:main
    aces_retrieve_weblogs = aces.retrieval_scripts.retrieve_weblogs:main
    aces_recover_tclean_commands = aces.pipeline_scripts.recover_tclean_commands:main
    aces_write_tclean_scripts = aces.imaging.write_tclean_scripts:main
    aces_uvhistograms = aces.analysis.uvhistograms:main

[tool:pytest]
testpaths = "aces"
astropy_header = true
text_file_format = rst

[coverage:run]
omit =
    aces/_astropy_init*
    aces/conftest.py
    aces/*setup_package*
    aces/tests/*
    aces/*/tests/*
    aces/extern/*
    aces/version*
    */aces/_astropy_init*
    */aces/conftest.py
    */aces/*setup_package*
    */aces/tests/*
    */aces/*/tests/*
    */aces/extern/*
    */aces/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
